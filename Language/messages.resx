<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BestDayLaunching" xml:space="preserve">
    <value>"Best date for launching"</value>
  </data>
  <data name="BestLaunchingDate" xml:space="preserve">
    <value>The best date for launching is :</value>
  </data>
  <data name="EmailBody" xml:space="preserve">
    <value>The best Spaceport for launching is: {0} on {1}.</value>
  </data>
  <data name="EmailNotSent" xml:space="preserve">
    <value>Failed to send email. Please verify your credentials and try again.</value>
  </data>
  <data name="EmailSent" xml:space="preserve">
    <value>Email sent successfully.</value>
  </data>
  <data name="EmailSubject" xml:space="preserve">
    <value>Weather condition analysis for launching to SPACE</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Please, enter your e-mail.</value>
  </data>
  <data name="EnterFolderPath" xml:space="preserve">
    <value>Please, enter the path to the folder where you are storing the CSV files!</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Please, enter your e-mail password.</value>
  </data>
  <data name="EnterReceiverEmail" xml:space="preserve">
    <value>Please, enter the receiver email.</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello, dear user!</value>
  </data>
  <data name="InvalidParameter" xml:space="preserve">
    <value>Invalid parameter in '{0}'. Please, check!</value>
  </data>
  <data name="MissingCloudData" xml:space="preserve">
    <value>Clouds data is missing for {0} July!</value>
  </data>
  <data name="MissingCSVFileData" xml:space="preserve">
    <value>Something in '{0}'.csv is wrong! Check for missing information(empty cells).</value>
  </data>
  <data name="MissingCSVFiles" xml:space="preserve">
    <value>Sorry, but it looks like there is no csv files in this folder.</value>
  </data>
  <data name="MissingFolder" xml:space="preserve">
    <value>Sorry, this folder does not exist! PLease, try with another one.</value>
  </data>
  <data name="MissingHumidityData" xml:space="preserve">
    <value>Humidity data is missing for {0} July!</value>
  </data>
  <data name="MissingInput" xml:space="preserve">
    <value>Sorry, but it looks like you missed to enter something.</value>
  </data>
  <data name="MissingLightning" xml:space="preserve">
    <value>Lightning data is missing for {0} July!</value>
  </data>
  <data name="MissingPrecipitationData" xml:space="preserve">
    <value>Precipitation data is missing for {0} July!</value>
  </data>
  <data name="MissingSuitableDate" xml:space="preserve">
    <value>There is no suitable date for this location.</value>
  </data>
  <data name="MissingTemperatureData" xml:space="preserve">
    <value>Temperature data is missing for {i} July!</value>
  </data>
  <data name="MissingWindData" xml:space="preserve">
    <value>Wind data is missing for {i} July!</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value> July</value>
  </data>
  <data name="ReadingError" xml:space="preserve">
    <value>Oh, no! It seems like there is a problem with file reading.</value>
  </data>
  <data name="ReportNotSaved" xml:space="preserve">
    <value>Creating analysis report failed!</value>
  </data>
  <data name="ReportSaved" xml:space="preserve">
    <value>The analysis report has been successfully saved to 'LaunchAnalysisReport.csv'.</value>
  </data>
  <data name="SpaceportLocation" xml:space="preserve">
    <value>"Spaceport Location"</value>
  </data>
  <data name="Thanks" xml:space="preserve">
    <value>Thank you for using this program!</value>
  </data>
</root>